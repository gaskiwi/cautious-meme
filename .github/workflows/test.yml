name: Test RL Robotics

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-glx libglib2.0-0
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test imports
      run: |
        python -c "import src; print('Package imported successfully')"
        python -c "from src.utils.config_loader import load_config; print('Utils imported')"
        python -c "from src.environments import SimpleRobotEnv; print('Environments imported')"
    
    - name: Test configuration loading
      run: |
        python -c "from src.utils.config_loader import load_config; config = load_config('configs/training_config.yaml'); print('Config loaded')"
    
    - name: Test environment creation
      run: |
        python -c "from src.environments import SimpleRobotEnv; env = SimpleRobotEnv(); env.reset(); print('Environment works')"
    
    - name: Run quick tests
      run: |
        python examples/quick_test.py

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install linting tools
      run: |
        pip install black flake8
    
    - name: Check code formatting with black
      run: |
        black --check src/ *.py || true
    
    - name: Lint with flake8
      run: |
        flake8 src/ --max-line-length=120 --ignore=E501,W503 || true
